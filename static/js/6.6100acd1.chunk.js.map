{"version":3,"sources":["components/NewsList/index.js","components/NewsList/news.module.css","helper/store.js","helper/api.js","helper/data.js","routes/Home/index.js"],"names":["News","props","info","source","name","author","push","date","publishedAt","Date","toLocaleString","className","styles","item","onClick","window","open","url","image","style","backgroundImage","content","title","join","description","NewsList","news","list","map","i","urlToImage","key","module","exports","globalStore","initialStore","this","value","expired","Error","str","JSON","stringify","localStorage","setItem","getItem","parsed","parse","now","getTime","removeItem","clear","setting","country","CONFIG","api","origin","token","instance","axios","create","baseURL","timeout","headers","fetchHeadlines","get","params","fetchEverything","q","interceptors","response","use","data","status","Promise","reject","dateAfter","milisec","Home","_isMounted","state","store","localHeadlines","resolve","then","res","headlines","articles","save","anHour","getTopHeadlines","setState","length","Loading","React","Component"],"mappings":"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","file":"static/js/6.6100acd1.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './news.module.css'\n\nfunction News (props) {\n  const openLink = () => {\n    window.open(props.url, '_blank')\n  }\n  const info = [props.source.name]\n  if (props.author) info.push(props.author)\n  const date = props.publishedAt\n    ? new Date(props.publishedAt).toLocaleString()\n    : null\n  return (\n    <div\n      className={styles.item}\n      onClick={openLink}\n    >\n      { props.image\n        ? (\n          <div\n            className={styles.image}\n            style={{backgroundImage: `url(${props.image})`}}\n          ></div>\n        )\n        : null\n      }\n      <div className={styles.content}>\n        <div className={styles.title}>{props.title}</div>\n        <div className={styles.info}>\n          <span>{info.join('/')}</span>\n          <span>{date}</span>\n        </div>\n        <div className={styles.description}>{props.description}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default function NewsList (props) {\n  const news = props.list.map((item, i) => (\n    <News\n      title={item.title}\n      description={item.description}\n      url={item.url}\n      source={item.source}\n      author={item.author}\n      publishedAt={item.publishedAt}\n      image={item.urlToImage}\n      key={i}\n    />\n  ))\n  return (\n    <div>\n      {news}\n    </div>\n  )\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"news_item__2akXV\",\"content\":\"news_content__3kxe-\",\"title\":\"news_title__3WJqZ\",\"info\":\"news_info__2Ny5e\",\"description\":\"news_description__2LbzD\",\"image\":\"news_image__8z6Aw\"};","const isExpired = (date) => {\n  if (!date) return false\n  return Date.now() > new Date(date).getTime()\n}\n\nexport class Store {\n  constructor (initialStore) {\n    this.initialStore = initialStore\n  }\n  save ({ key, value, expired }) {\n    if (!value || typeof value !== 'object') throw new Error('value must be an object')\n    const str = JSON.stringify({\n      value,\n      expired\n    })\n    localStorage.setItem(key, str)\n  }\n  get (key) {\n    const str = localStorage.getItem(key)\n    if (!str) return this.initialStore[key] || null\n    const parsed = JSON.parse(str)\n    if (isExpired(parsed.expired)) {\n      return this.initialStore[key] || null\n    } else {\n      return parsed.value\n    }\n  }\n  remove (key) {\n    localStorage.removeItem(key)\n  }\n  clear () {\n    localStorage.clear()\n  }\n}\n\nconst globalStore = new Store({\n  setting: {\n    country: 'tw'\n  }\n})\n// developing\n// store.clear()\nexport default globalStore\n","import axios from 'axios'\nimport CONFIG from '../config'\nconst { origin, token } = CONFIG.api\n\nconst instance = axios.create({\n  baseURL: origin,\n  timeout: 3000,\n  headers: {\n    'X-Api-Key': token\n  }\n})\ninstance.interceptors.response.use(response => {\n  if (response.data && response.data.status === 'ok') return response.data\n  else return Promise.reject(response)\n})\n\nexport function fetchHeadlines ({ country }) {\n  return instance.get('/top-headlines', {\n    params: {\n      country\n    }\n  })\n}\n\nexport function fetchSources ({ country }) {\n  return instance.get('/sources')\n}\n\nexport function fetchEverything ({ q }) {\n  return instance.get('/everything', {\n    params: {\n      q\n    }\n  })\n}","import store from './store';\nimport { fetchHeadlines, fetchEverything } from './api'\n\nconst anHour = 60 * 60 * 1000\nconst dateAfter = (milisec) => {\n  return new Date(Date.now() + milisec)\n}\n\nexport function resetTopHeadlines () {\n  store.remove('headlines')\n}\n\nexport function getTopHeadlines () {\n  const country = store.get('setting').country\n  const localHeadlines = store.get('headlines')\n  if (localHeadlines) return Promise.resolve(localHeadlines)\n  return fetchHeadlines({ country }).then(res => {\n    const headlines = res.articles\n    store.save({\n      key: 'headlines',\n      value: headlines,\n      expired: dateAfter(anHour / 2)\n    })\n    return headlines\n  })\n}\n\nexport function getEverything () {\n  const localEverything = store.get('everything')\n  if (localEverything) return Promise.resolve(localEverything)\n  return fetchEverything({ q: 'apple' }).then(res => {\n    const articles = res.articles\n    store.save({\n      key: 'everything',\n      value: articles,\n      expired: dateAfter(anHour)\n    })\n    return articles\n  })\n}","import React from 'react'\nimport NewsList from '../../components/NewsList/index'\nimport Loading from '../../components/Loading/index'\nimport { getTopHeadlines } from '../../helper/data'\n\nexport default class Home extends React.Component {\n  _isMounted = false\n  constructor (props) {\n    super(props)\n    this.state = {\n      list: []\n    }\n  }\n  componentDidMount () {\n    this._isMounted = true\n    getTopHeadlines({ country: 'tw' })\n      .then(news => {\n        if (this._isMounted) {\n          this.setState({\n            list: news\n          })\n        }\n      })\n  }\n  componentWillUnmount () {\n    this._isMounted = false\n  }\n  render () {\n    return (\n      <div>\n        {\n          this.state.list.length === 0\n            ? <Loading/>\n            : <NewsList list={this.state.list}/>\n        }\n      </div>\n    )\n  }\n}"],"sourceRoot":""}