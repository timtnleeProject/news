{"version":3,"sources":["routes/Explore/explore.module.css","routes/Explore/index.js","helper/store.js","components/NewsList/index.js","components/NewsList/news.module.css","helper/api.js","helper/data.js"],"names":["module","exports","Explore","props","_isMounted","state","list","q","handleQuery","bind","search","this","params","store","get","getEverything","then","setState","e","target","value","className","styles","id","label","input","onChange","variant","color","onClick","length","React","Component","globalStore","initialStore","key","expired","Error","str","JSON","stringify","localStorage","setItem","getItem","date","parsed","parse","Date","now","getTime","removeItem","clear","setting","country","category","News","info","source","name","author","push","publishedAt","toLocaleString","item","window","open","url","image","style","backgroundImage","content","title","join","description","NewsList","news","map","i","urlToImage","CONFIG","api","origin","token","instance","axios","create","baseURL","timeout","headers","interceptors","response","use","data","status","Promise","reject","getTopHeadlines","localHeadlines","resolve","res","milisec","headlines","articles","save","anHour","ob1","ob2","localParams","Object","keys","some","localEverything","fetchEverything"],"mappings":"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","file":"static/js/4.60ead2be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-bar\":\"explore_search-bar__1QIYz\",\"input\":\"explore_input__j2QIq\"};","import React from 'react';\r\nimport { getEverything } from '../../helper/data'\r\nimport store from '../../helper/store'\r\nimport Loading from '../../components/Loading'\r\nimport NewsList from '../../components/NewsList'\r\nimport styles from './explore.module.css'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nexport default class Explore extends React.Component {\r\n  _isMounted = false\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      list: [],\r\n      q: ''\r\n    }\r\n    this.handleQuery = this.handleQuery.bind(this)\r\n    this.search = this.search.bind(this)\r\n  }\r\n  componentDidMount () {\r\n    this._isMounted = true\r\n    const params = store.get('params')\r\n    getEverything(params).then(list => {\r\n      if (this._isMounted) {\r\n        this.setState({\r\n          list\r\n        })\r\n      }\r\n    })\r\n  }\r\n  componentWillUnmount () {\r\n    this._isMounted = false\r\n  }\r\n  handleQuery (e) {\r\n    this.setState({\r\n      q: e.target.value\r\n    })\r\n  }\r\n  search () {\r\n    if (!this.state.q) return\r\n    this.setState({\r\n      list: []\r\n    })\r\n    getEverything({ q: this.state.q }).then(list => {\r\n      this.setState({\r\n        list\r\n      })\r\n    })\r\n  }\r\n  render () {\r\n    return (\r\n      <>\r\n        <div className={styles['search-bar']}>\r\n          <TextField\r\n            value={this.state.q}\r\n            id=\"search-text\"\r\n            label=\"Standard\"\r\n            className={styles.input}\r\n            onChange={this.handleQuery}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={this.search}\r\n            className=\"m-l\"\r\n          >搜尋</Button>\r\n        </div>\r\n        {\r\n          this.state.list.length === 0\r\n            ? <Loading/>\r\n            : <NewsList list={this.state.list}/>\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n","const isExpired = (date) => {\r\n  if (!date) return false\r\n  return Date.now() > new Date(date).getTime()\r\n}\r\n\r\nexport class Store {\r\n  constructor (initialStore) {\r\n    this.initialStore = initialStore\r\n  }\r\n  save ({ key, value, expired }) {\r\n    if (!value || typeof value !== 'object') throw new Error('value must be an object')\r\n    const str = JSON.stringify({\r\n      value,\r\n      expired\r\n    })\r\n    localStorage.setItem(key, str)\r\n  }\r\n  get (key) {\r\n    const str = localStorage.getItem(key)\r\n    if (!str) return this.initialStore[key] || null\r\n    const parsed = JSON.parse(str)\r\n    if (isExpired(parsed.expired)) {\r\n      return this.initialStore[key] || null\r\n    } else {\r\n      return parsed.value\r\n    }\r\n  }\r\n  remove (key) {\r\n    localStorage.removeItem(key)\r\n  }\r\n  clear () {\r\n    localStorage.clear()\r\n  }\r\n}\r\n\r\nconst globalStore = new Store({\r\n  setting: {\r\n    country: 'tw',\r\n    category: 'general'\r\n  },\r\n  params: {\r\n    q: 'Google'\r\n  }\r\n})\r\n// developing\r\n// store.clear()\r\nexport default globalStore\r\n","import React from 'react';\r\nimport styles from './news.module.css'\r\n\r\nfunction News (props) {\r\n  const openLink = () => {\r\n    window.open(props.url, '_blank')\r\n  }\r\n  const info = [props.source.name]\r\n  if (props.author) info.push(props.author)\r\n  const date = props.publishedAt\r\n    ? new Date(props.publishedAt).toLocaleString()\r\n    : null\r\n  return (\r\n    <div\r\n      className={styles.item}\r\n      onClick={openLink}\r\n    >\r\n      { props.image\r\n        ? (\r\n          <div\r\n            className={styles.image}\r\n            style={{backgroundImage: `url(${props.image})`}}\r\n          ></div>\r\n        )\r\n        : null\r\n      }\r\n      <div className={styles.content}>\r\n        <div className={styles.title}>{props.title}</div>\r\n        <div className={styles.info}>\r\n          <span>{info.join('/')}</span>\r\n          <span>{date}</span>\r\n        </div>\r\n        <div className={styles.description}>{props.description}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function NewsList (props) {\r\n  const news = props.list.map((item, i) => (\r\n    <News\r\n      title={item.title}\r\n      description={item.description}\r\n      url={item.url}\r\n      source={item.source}\r\n      author={item.author}\r\n      publishedAt={item.publishedAt}\r\n      image={item.urlToImage}\r\n      key={i}\r\n    />\r\n  ))\r\n  return (\r\n    <div>\r\n      {news}\r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"news_item__3G2hi\",\"content\":\"news_content__1S5_k\",\"title\":\"news_title__1juJ3\",\"info\":\"news_info__9tG79\",\"description\":\"news_description__32Is-\",\"image\":\"news_image__38mXW\"};","import axios from 'axios'\r\nimport CONFIG from '../config'\r\nconst { origin, token } = CONFIG.api\r\n\r\nconst instance = axios.create({\r\n  baseURL: origin,\r\n  timeout: 3000,\r\n  headers: {\r\n    'X-Api-Key': token\r\n  }\r\n})\r\ninstance.interceptors.response.use(response => {\r\n  if (response.data && response.data.status === 'ok') return response.data\r\n  else return Promise.reject(response)\r\n})\r\n\r\nexport function fetchHeadlines (params) {\r\n  return instance.get('/top-headlines', {\r\n    params\r\n  })\r\n}\r\n\r\nexport function fetchSources ({ country }) {\r\n  return instance.get('/sources')\r\n}\r\n\r\nexport function fetchEverything ({ q }) {\r\n  return instance.get('/everything', {\r\n    params: {\r\n      q\r\n    }\r\n  })\r\n}","import store from './store';\r\nimport { fetchHeadlines, fetchEverything } from './api'\r\n\r\nconst anHour = 60 * 60 * 1000\r\nconst dateAfter = (milisec) => {\r\n  return new Date(Date.now() + milisec)\r\n}\r\n\r\nexport function resetTopHeadlines () {\r\n  store.remove('headlines')\r\n}\r\n\r\nexport function getTopHeadlines () {\r\n  const setting = store.get('setting')\r\n  const { country, category } = setting\r\n  const localHeadlines = store.get('headlines')\r\n  if (localHeadlines) return Promise.resolve(localHeadlines)\r\n  return fetchHeadlines({ country, category }).then(res => {\r\n    const headlines = res.articles\r\n    store.save({\r\n      key: 'headlines',\r\n      value: headlines,\r\n      expired: dateAfter(anHour / 2)\r\n    })\r\n    return headlines\r\n  })\r\n}\r\n\r\nconst isSame = (ob1, ob2) => {\r\n  const keys = Object.keys({...ob1, ob2})\r\n  const inconsist = keys.some(key => {\r\n    return ob1[key] !== ob2[key]\r\n  })\r\n  return !inconsist\r\n}\r\nexport function getEverything (params) {\r\n  const localParams = store.get('params')\r\n  if (isSame(localParams, params)) {\r\n    const localEverything = store.get('everything')\r\n    if (localEverything) return Promise.resolve(localEverything)\r\n  }\r\n  return fetchEverything(params).then(res => {\r\n    const articles = res.articles\r\n    store.save({\r\n      key: 'everything',\r\n      value: articles\r\n    })\r\n    store.save({\r\n      key: 'params',\r\n      value: params\r\n    })\r\n    return articles\r\n  })\r\n}"],"sourceRoot":""}