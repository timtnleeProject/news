{"version":3,"sources":["components/Setting/setting.module.css","components/Setting/home.js","routes/Home/SettingBar.js","routes/Home/index.js","helper/store.js","components/NewsList/index.js","components/NewsList/news.module.css","helper/api.js","helper/data.js"],"names":["module","exports","countries","split","categories","Setting","setting","store","get","useState","country","setCountry","category","setCategory","handleTagSelect","type","value","remove","save","key","className","styles","section","title","map","c","active","Chip","tag","onClick","bind","label","color","props","List","style","maxWidth","cursor","marginBottom","subheader","dense","ListItem","ListItemText","primary","Divider","Home","_isMounted","state","list","modalOpen","error","this","getTopHeadlines","then","news","setState","catch","stateAfter","localSetting","toggleModal","length","Loading","NewsList","Modal","open","onClose","Fade","in","top","left","transform","position","width","backgroundColor","padding","float","Button","variant","React","Component","globalStore","initialStore","expired","Error","str","JSON","stringify","localStorage","setItem","getItem","date","parsed","parse","Date","now","getTime","removeItem","clear","params","q","News","link","author","published_date","summary","info","rights","push","useMemo","toLocaleString","item","window","image","backgroundImage","content","join","description","i","CONFIG","api","origin","token","instance","axios","create","baseURL","timeout","headers","interceptors","response","use","data","status","Promise","reject","lang","topic","localHeadlines","resolve","res","milisec","headlines","articles","anHour","getEverything","ob1","ob2","localParams","Object","keys","some","localEverything","fetchEverything"],"mappings":"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","file":"static/js/5.45ecbb9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"setting_section__2OMJQ\",\"title\":\"setting_title__3Lyb2\",\"tags-wrap\":\"setting_tags-wrap__2--RY\",\"tag\":\"setting_tag__110aS\"};","import React, { useState } from 'react'\r\nimport styles from './setting.module.css'\r\nimport store from 'helper/store'\r\nimport Chip from '@material-ui/core/Chip'\r\n\r\nconst countryStr = 'af ar bg bn ca cn cs cy da de el en es et fa fi fr gu he hi hr hu id it ja kn ko lt lv mk ml mr ne nl no pa pl pt ro ru sk sl so sq sv sw ta te th tl tr tw uk ur vi'\r\nconst countries = countryStr.split(' ')\r\nconst categories = ['news', 'sport', 'tech', 'world', 'finance', 'politics', 'business', 'economics', 'entertainment']\r\n\r\nexport default function Setting () {\r\n  const setting = store.get('setting')\r\n  const [country, setCountry] = useState(setting.country);\r\n  const [category, setCategory] = useState(setting.category);\r\n  const handleTagSelect = (type, value) => {\r\n    const setting = store.get('setting')\r\n    if (setting[type] === value) return\r\n    store.remove('headlines')\r\n    store.save({\r\n      key: 'setting',\r\n      value: {\r\n        ...setting,\r\n        [type]: value\r\n      }\r\n    })\r\n    if (type === 'country') setCountry(value)\r\n    else setCategory(value)\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={styles.section}>\r\n        <div className={styles.title}>language</div>\r\n        <div className={styles['tags-wrap']}>\r\n          {\r\n            countries.map(c => {\r\n              const active = country === c\r\n              return (\r\n                <Chip\r\n                  className={styles.tag}\r\n                  onClick={handleTagSelect.bind(this, 'country', c)}\r\n                  label={c}\r\n                  key={c}\r\n                  color={active ? 'primary' : 'default'}\r\n                />\r\n              )}\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n      <div className={styles.section}>\r\n        <div className={styles.title}>category</div>\r\n        <div className={styles['tags-wrap']}>\r\n          {\r\n            categories.map(c => {\r\n              const active = category === c\r\n              return (\r\n                <Chip\r\n                  className={styles.tag}\r\n                  onClick={handleTagSelect.bind(this, 'category', c)}\r\n                  label={c}\r\n                  key={c}\r\n                  color={active ? 'primary' : 'default'}\r\n                />\r\n              )}\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nexport default function Setting (props) {\r\n  const { country, category } = props.setting\r\n  return (\r\n    <List\r\n      className=\"no-tab\"\r\n      style={{\r\n        maxWidth: '300px',\r\n        cursor: 'pointer',\r\n        marginBottom: '10px'\r\n      }}\r\n      subheader=\"Preference\"\r\n      dense\r\n      onClick={props.onClick}\r\n    >\r\n      <ListItem>\r\n        <ListItemText primary=\"Country\" />\r\n        <ListItemText primary={country} />\r\n      </ListItem>\r\n      <Divider />\r\n      <ListItem>\r\n        <ListItemText primary=\"Category\" />\r\n        <ListItemText primary={category} />\r\n      </ListItem>\r\n      <Divider />\r\n    </List>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport NewsList from '../../components/NewsList'\r\nimport Loading from '../../components/Loading'\r\nimport Setting from '../../components/Setting/home'\r\nimport SettingBar from './SettingBar'\r\nimport { getTopHeadlines } from '../../helper/data'\r\nimport store from '../../helper/store'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport Button from '@material-ui/core/Button'\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nexport default class Home extends React.Component {\r\n  _isMounted = false\r\n  constructor (props) {\r\n    super(props)\r\n    const setting = store.get('setting')\r\n    this.state = {\r\n      list: [],\r\n      modalOpen: false,\r\n      setting,\r\n      error: false\r\n    }\r\n  }\r\n  componentDidMount () {\r\n    this._isMounted = true\r\n    this.getTopHeadlines()\r\n  }\r\n  componentWillUnmount () {\r\n    this._isMounted = false\r\n  }\r\n\r\n  getTopHeadlines () {\r\n    getTopHeadlines()\r\n      .then(news => {\r\n        if (this._isMounted) {\r\n          this.setState({\r\n            list: news\r\n          })\r\n        }\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          error: true\r\n        })\r\n      })\r\n  }\r\n\r\n  toggleModal () {\r\n    this.setState({\r\n      modalOpen: !this.state.modalOpen\r\n    })\r\n  }\r\n  save () {\r\n    const stateAfter = {}\r\n    const { category, country } = this.state.setting\r\n    const localSetting = store.get('setting')\r\n    if (category !== localSetting.category || country !== localSetting.country) {\r\n      stateAfter.setting = localSetting\r\n      stateAfter.list = []\r\n      this.getTopHeadlines()\r\n    }\r\n    this.toggleModal()\r\n    this.setState(stateAfter)\r\n  }\r\n  render () {\r\n    const { category, country } = this.state.setting\r\n    return (\r\n      <div>\r\n        <SettingBar\r\n          onClick={this.toggleModal.bind(this)}\r\n          setting={{ category, country }}\r\n        />\r\n        {\r\n          this.state.error\r\n            ? <div>API is not available</div>\r\n            : this.state.list.length === 0\r\n              ? <Loading/>\r\n              : <NewsList list={this.state.list}/>\r\n         \r\n        }\r\n        <Modal\r\n          open={this.state.modalOpen}\r\n          onClose={this.toggleModal.bind(this)}\r\n        >\r\n          <Fade in={this.state.modalOpen}>\r\n            <div style={{\r\n              top: '50%',\r\n              left: '50%',\r\n              transform: 'translate(-50%, -50%)',\r\n              position: 'absolute',\r\n              width: '80vw',\r\n              maxWidth: '600px',\r\n              backgroundColor: 'white',\r\n              padding: '10px'\r\n            }}>\r\n              <Setting></Setting>\r\n              <div style={{float: 'right'}}>\r\n                <Button variant=\"contained\" className=\"m-r\" onClick={this.toggleModal.bind(this)}>Cancel</Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.save.bind(this)}>Save</Button>\r\n              </div>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}","const isExpired = (date) => {\r\n  if (!date) return false\r\n  return Date.now() > new Date(date).getTime()\r\n}\r\n\r\nexport class Store {\r\n  constructor (initialStore) {\r\n    this.initialStore = initialStore\r\n  }\r\n  save ({ key, value, expired }) {\r\n    if (!value || typeof value !== 'object') throw new Error('value must be an object')\r\n    const str = JSON.stringify({\r\n      value,\r\n      expired\r\n    })\r\n    localStorage.setItem(key, str)\r\n  }\r\n  get (key) {\r\n    const str = localStorage.getItem(key)\r\n    if (!str) return this.initialStore[key] || null\r\n    const parsed = JSON.parse(str)\r\n    if (isExpired(parsed.expired)) {\r\n      return this.initialStore[key] || null\r\n    } else {\r\n      return parsed.value\r\n    }\r\n  }\r\n  remove (key) {\r\n    localStorage.removeItem(key)\r\n  }\r\n  clear () {\r\n    localStorage.clear()\r\n  }\r\n}\r\n\r\nconst globalStore = new Store({\r\n  setting: {\r\n    country: 'tw',\r\n    category: 'news'\r\n  },\r\n  params: {\r\n    q: 'Google'\r\n  }\r\n})\r\n// developing\r\n// store.clear()\r\nexport default globalStore\r\n","import React, { useMemo } from 'react';\r\nimport styles from './news.module.css'\r\n\r\nfunction News (props) {\r\n  const {\r\n    title,\r\n    link,\r\n    author,\r\n    published_date,\r\n    summary,\r\n  } = props;\r\n  const openLink = () => {\r\n    window.open(link, '_blank')\r\n  }\r\n  const info = [props.rights]\r\n  if (author) info.push(author)\r\n  const date = useMemo(() => published_date\r\n    ? new Date(published_date).toLocaleString()\r\n    : null, [published_date]) \r\n  return (\r\n    <div\r\n      className={styles.item}\r\n      onClick={openLink}\r\n    >\r\n      { props.image\r\n        ? (\r\n          <div\r\n            className={styles.image}\r\n            style={{backgroundImage: `url(${props.image})`}}\r\n          ></div>\r\n        )\r\n        : null\r\n      }\r\n      <div className={styles.content}>\r\n        <div className={styles.title}>{title}</div>\r\n        <div className={styles.info}>\r\n          <span>{info.join('/')}</span>\r\n          <span>{date}</span>\r\n        </div>\r\n        <div className={styles.description}>{summary}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function NewsList (props) {\r\n  const news = props.list.map((item, i) => (\r\n    <News\r\n      {...item}\r\n      key={i}\r\n    />\r\n  ))\r\n  return (\r\n    <div>\r\n      {news}\r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"news_item__oCk2E\",\"content\":\"news_content__3RzUW\",\"title\":\"news_title__1sZ27\",\"info\":\"news_info__3K7s_\",\"description\":\"news_description__3Vo79\",\"image\":\"news_image__IwsD-\"};","import axios from 'axios'\r\nimport CONFIG from '../config'\r\nconst { origin, token } = CONFIG.api\r\n\r\nconst instance = axios.create({\r\n  baseURL: origin,\r\n  timeout: 3000,\r\n  headers: {\r\n    \"x-rapidapi-key\": token,\r\n    \"x-rapidapi-host\": \"newscatcher.p.rapidapi.com\",\r\n  }\r\n})\r\ninstance.interceptors.response.use(response => {\r\n  if (response.data && response.data.status === 'ok') return response.data\r\n  else return Promise.reject(response)\r\n})\r\n\r\nexport function fetchHeadlines (params) {\r\n  return instance.get('/latest_headlines', {\r\n    params\r\n  })\r\n}\r\n\r\n// export function fetchSources ({ country }) {\r\n//   return instance.get('/sources')\r\n// }\r\n\r\nexport function fetchEverything ({ q }) {\r\n  return instance.get('/search', {\r\n    params: {\r\n      q\r\n    }\r\n  })\r\n}","import store from './store';\r\nimport { fetchHeadlines, fetchEverything } from './api'\r\n\r\nconst anHour = 60 * 60 * 1000\r\nconst dateAfter = (milisec) => {\r\n  return new Date(Date.now() + milisec)\r\n}\r\n\r\nexport function resetTopHeadlines () {\r\n  store.remove('headlines')\r\n}\r\n\r\nexport function getTopHeadlines () {\r\n  const setting = store.get('setting')\r\n  const { country:lang, category:topic } = setting\r\n  const localHeadlines = store.get('headlines')\r\n  if (localHeadlines) return Promise.resolve(localHeadlines)\r\n  return fetchHeadlines({ lang, topic }).then(res => {\r\n    const headlines = res.articles\r\n    store.save({\r\n      key: 'headlines',\r\n      value: headlines,\r\n      expired: dateAfter(anHour / 2)\r\n    })\r\n    return headlines\r\n  })\r\n}\r\n\r\nconst isSame = (ob1, ob2) => {\r\n  const keys = Object.keys({...ob1, ob2})\r\n  const inconsist = keys.some(key => {\r\n    return ob1[key] !== ob2[key]\r\n  })\r\n  return !inconsist\r\n}\r\nexport function getEverything (params) {\r\n  const localParams = store.get('params')\r\n  if (isSame(localParams, params)) {\r\n    const localEverything = store.get('everything')\r\n    if (localEverything) return Promise.resolve(localEverything)\r\n  }\r\n  return fetchEverything(params).then(res => {\r\n    const articles = res.articles\r\n    store.save({\r\n      key: 'everything',\r\n      value: articles\r\n    })\r\n    store.save({\r\n      key: 'params',\r\n      value: params\r\n    })\r\n    return articles\r\n  })\r\n}"],"sourceRoot":""}